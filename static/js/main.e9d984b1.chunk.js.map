{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","className","s","title","list","map","name","number","id","item","btn","type","onClick","Form","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","form","label","input","placeholder","pattern","required","onChange","Component","Filter","App","filter","addContactHandler","find","contact","alert","newContact","shortid","generate","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","resetFilter","getContacts","localStorage","getItem","parsedContacts","JSON","parse","console","log","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,uCCAxDD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,MAAQ,oBAAoB,IAAM,oB,gKCoCvHC,MAjCf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAE/B,OACE,qCACE,oBAAIC,UAAWC,IAAEC,MAAjB,sBACA,oBAAIF,UAAWC,IAAEE,KAAjB,SACGL,EAASM,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACZ,qBAAaP,UAAWC,IAAEO,KAA1B,oBACMH,EADN,aACeC,GACb,wBACEN,UAAWC,IAAEQ,IACbC,KAAK,SACLC,QAAS,kBAAMZ,EAAgBQ,IAHjC,sBAFOA,Y,wBCRbK,E,4MACJC,MAAQ,CAAER,KAAM,GAAIC,OAAQ,I,EAE5BQ,kBAAoB,SAAAC,GAClB,MAAwBA,EAAEC,cAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGb,EAAOY,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKU,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAEb,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBkB,KAAKX,MAAtBR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,qCACE,oBAAIN,UAAWC,IAAEC,MAAjB,uBACA,uBAAMF,UAAWC,IAAEwB,KAAMH,SAAUE,KAAKL,aAAxC,UACE,wBAAOnB,UAAWC,IAAEyB,MAApB,iBAEE,uBACE1B,UAAWC,IAAE0B,MACbjB,KAAK,OACLL,KAAK,OACLuB,YAAY,gBACZC,QAAQ,yHACR3B,MAAM,kcACN4B,UAAQ,EACRb,MAAOZ,EACP0B,SAAUP,KAAKV,uBAGnB,wBAAOd,UAAWC,IAAEyB,MAApB,mBAEE,uBACE1B,UAAWC,IAAE0B,MACbjB,KAAK,MACLL,KAAK,SACLuB,YAAY,qBACZC,QAAQ,yFACR3B,MAAM,giBACN4B,UAAQ,EACRb,MAAOX,EACPyB,SAAUP,KAAKV,uBAGnB,wBAAQd,UAAWC,IAAEQ,IAAKC,KAAK,SAA/B,mC,GAtDSsB,aA+DJpB,I,iBCzCAqB,MAtBf,YAAsC,IAApBhB,EAAmB,EAAnBA,MAAOc,EAAY,EAAZA,SACvB,OACE,wBAAO/B,UAAWC,IAAEyB,MAApB,kCAEE,uBACE1B,UAAWC,IAAE0B,MACbjB,KAAK,OACLL,KAAK,OACLuB,YAAY,uBACZC,QAAQ,yHACR3B,MAAM,kcACNe,MAAOA,EACPc,SAAUA,QCRZG,E,4MACJrB,MAAQ,CACNf,SAAU,CACR,CAAES,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,cAEhD6B,OAAQ,I,EAkBVC,kBAAoB,YAAuB,IAApB/B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAI3B,GAHyB,EAAKO,MAAMf,SAASuC,MAC3C,SAAAC,GAAO,OAAIA,EAAQjC,OAASA,KAG5BkC,MAAM,GAAD,OAAIlC,EAAJ,gCACA,CACL,IAAMmC,EAAa,CACjBnC,OACAC,SACAC,GAAIkC,IAAQC,YAEd,EAAKxB,UAAS,SAAAyB,GAAS,MAAK,CAC1B7C,SAAS,CAAE0C,GAAH,mBAAkBG,EAAU7C,iB,EAK1C8C,aAAe,SAAA7B,GACb,EAAKG,SAAS,CAAEiB,OAAQpB,EAAEC,cAAcC,S,EAG1C4B,mBAAqB,WACnB,MAA6B,EAAKhC,MAA1Bf,EAAR,EAAQA,SACFgD,EADN,EAAkBX,OACcY,cAChC,OAAOjD,EAASqC,QAAO,qBAAG9B,KACnB0C,cAAcC,SAASF,O,EAIhCG,cAAgB,SAAAC,GACd,EAAKhC,UAAS,SAAAyB,GAAS,MAAK,CAC1B7C,SAAU6C,EAAU7C,SAASqC,QAAO,qBAAG5B,KAAgB2C,SAEzD,EAAKC,e,EAGPA,YAAc,WACZ,EAAKjC,SAAS,CAAEiB,OAAQ,M,uDArD1B,WACE,IAAMiB,EAAcC,aAAaC,QAAQ,YACnCC,EAAiBC,KAAKC,MAAML,GAClCM,QAAQC,IAAIJ,GACRA,GACF/B,KAAKN,SAAS,CAAEpB,SAAUyD,M,gCAI9B,SAAmBZ,GACbnB,KAAKX,MAAMf,WAAa6C,EAAU7C,UACpCuD,aAAaO,QAAQ,WAAYJ,KAAKK,UAAUrC,KAAKX,MAAMf,a,oBA6C/D,WACE,IAAQqC,EAAWX,KAAKX,MAAhBsB,OACF2B,EAAkBtC,KAAKqB,qBAE7B,OACE,qCACE,cAAC,EAAD,CAAMvB,SAAUE,KAAKY,oBACrB,cAAC,EAAD,CAAQL,SAAUP,KAAKoB,aAAc3B,MAAOkB,IAC5C,cAAC,EAAD,CACErC,SAAUgE,EACV/D,gBAAiByB,KAAKyB,uB,GA7EdjB,aAoFHE,ICrFf6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BxE,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,4B","file":"static/js/main.e9d984b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"title\":\"Form_title__lNS_Y\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"btn\":\"Form_btn__aasqa\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  // console.log(contacts);\n  return (\n    <>\n      <h2 className={s.title}>Contacts</h2>\n      <ul className={s.list}>\n        {contacts.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            {`${name}: ${number}`}\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import { Component } from 'react';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = { name: '', number: '' };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <h1 className={s.title}>Phonebook</h1>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Rosie Simpson\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={name}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"+38(0XX)-XXX-XX-XX\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Type name for search\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\n// import s from './App.module.css';\nimport shortid from 'shortid';\nimport ContactList from './components/ContactList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const getContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(getContacts);\n    console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContactHandler = ({ name, number }) => {\n    const duplicateContact = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n    if (duplicateContact) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        name,\n        number,\n        id: shortid.generate(),\n      };\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n    this.resetFilter();\n  };\n\n  resetFilter = () => {\n    this.setState({ filter: '' });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Form onSubmit={this.addContactHandler} />\n        <Filter onChange={this.changeFilter} value={filter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__ATLM_\",\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};"],"sourceRoot":""}