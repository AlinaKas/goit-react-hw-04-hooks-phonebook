{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","className","s","title","list","map","name","number","id","item","btn","type","onClick","Form","onSubmit","useState","setName","setNumber","handleInputChange","e","currentTarget","value","resetForm","form","preventDefault","label","input","placeholder","pattern","required","onChange","Filter","App","filter","setFilter","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","resetFilter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","newContact","shortid","generate","find","contact","alert","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.435947bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"title\":\"Form_title__lNS_Y\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"btn\":\"Form_btn__aasqa\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  // console.log(contacts);\n  return (\n    <>\n      <h2 className={s.title}>Contacts</h2>\n      <ul className={s.list}>\n        {contacts.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            {`${name}: ${number}`}\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import { useState } from 'react';\nimport s from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h1 className={s.title}>Phonebook</h1>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Rosie Simpson\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"+38(0XX)-XXX-XX-XX\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleInputChange}\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Type name for search\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\n// import s from './App.module.css';\nimport shortid from 'shortid';\nimport ContactList from './components/ContactList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nfunction App() {\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useLocalStorage('contacts', [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  // componentDidMount() {\n  //   const getContacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(getContacts);\n  //   console.log(parsedContacts);\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  const addContactHandler = (name, number) => {\n    const newContact = {\n      name,\n      number,\n      id: shortid.generate(),\n    };\n    setContacts(state => [newContact, ...state]);\n\n    const duplicateContact = contacts.find(contact => contact.name === name);\n    if (duplicateContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState => prevState.filter(({ id }) => id !== contactId));\n    resetFilter();\n  };\n\n  const resetFilter = () => {\n    setFilter('');\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <Form onSubmit={addContactHandler} />\n      <Filter onChange={changeFilter} value={filter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__ATLM_\",\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}